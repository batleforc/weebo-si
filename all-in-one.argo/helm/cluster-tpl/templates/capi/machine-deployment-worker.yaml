{{- if or (gt (int .Values.cluster.worker.replicas) 0) .Values.cluster.worker.autoscale -}}
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  labels:
    cluster.x-k8s.io/cluster-name: "{{ .Release.Name }}"
  name: "{{ .Release.Name }}-infra-worker"
  namespace: "{{ .Release.Namespace }}"
  annotations:
    cluster.x-k8s.io/cluster-api-autoscaler-node-group-max-size: "2"
    cluster.x-k8s.io/cluster-api-autoscaler-node-group-min-size: "0"
    capacity.cluster-autoscaler.kubernetes.io/memory: "{{ .Values.cluster.worker.ram }}"
    capacity.cluster-autoscaler.kubernetes.io/cpu: "{{ .Values.cluster.worker.cpu.cores }}"
    capacity.cluster-autoscaler.kubernetes.io/ephemeral-disk: "{{ .Values.cluster.worker.storage }}"
    capacity.cluster-autoscaler.kubernetes.io/maxPods: "100"
spec:
  clusterName: "{{ .Release.Name }}"
  {{ if not .Values.cluster.worker.autoscale }}
  replicas: {{ .Values.cluster.worker.replicas }}
  {{ end }}
  selector:
    matchLabels:
      cluster.x-k8s.io/cluster-name: "{{ .Release.Name }}"
  template:
    metadata:
      labels:
        cluster.x-k8s.io/cluster-name: "{{ .Release.Name }}"
        node-role.kubernetes.io/worker: ''
    spec:
      clusterName: "{{ .Release.Name }}"
      version: "{{ .Values.cluster.kubernetesVersion }}"
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
          kind: TalosConfigTemplate
          name: "{{ .Release.Name }}-infra-worker"
      infrastructureRef:
        name: "{{ .Release.Name }}-infra-worker"
        namespace: "{{ .Release.Namespace }}"
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
        kind: KubevirtMachineTemplate
{{- end -}}