version: '3'

#env:
  #KUBECONFIG: "{{.ROOT_DIR}}/capi.terraform/kubeconfig"

tasks:
  get-kubeconfig:
    cmds:
    - kubectl get secret {{.CLI_ARGS}}-kubeconfig -n default -o yaml | yq .data.value | base64 -d > kubeconfig.{{.CLI_ARGS}}.yml
  get-talosconfig:
    cmds:
    - kubectl get secret {{.CLI_ARGS}}-talosconfig -n default -o yaml | yq .data.talosconfig | base64 -d > talosconfig.{{.CLI_ARGS}}.yml
  kubectl:
    vars:
      cluster: '{{.cluster}}'
    preconditions:
    - sh: '[ {{.cluster}} != "" ]'
      msg: "cluster is required ex task capi:cluster:kubectl cluster='mono-node' -- get pods"
    - sh: '[ -f kubeconfig.{{.cluster}}.yml ]'
      msg: "kubeconfig.{{.cluster}}.yml is required please run get-kubeconfig ex: 'task cluster:get-kubeconfig -- mono-node' "
    cmds:
    - kubectl --kubeconfig kubeconfig.{{.cluster}}.yml {{.CLI_ARGS}}
  k9s:
    vars:
      cluster: '{{.cluster}}'
    preconditions:
    - sh: '[ {{.cluster}} != "" ]'
      msg: "cluster is required ex task capi:cluster:kubectl cluster='mono-node' -- get pods"
    - sh: '[ -f kubeconfig.{{.cluster}}.yml ]'
      msg: "kubeconfig.{{.cluster}}.yml is required please run get-kubeconfig ex: 'task cluster:get-kubeconfig -- mono-node' "
    cmds:
    - k9s --kubeconfig kubeconfig.{{.cluster}}.yml {{.CLI_ARGS}}
  ks-record:
    preconditions:
    - sh: '[ {{.cluster}} != "" ]'
      msg: "cluster is required ex task capi:cluster:kubectl cluster='mono-node' -- get pods"
    - sh: '[ -f kubeconfig.{{.cluster}}.yml ]'
      msg: "kubeconfig.{{.cluster}}.yml is required please run get-kubeconfig ex: 'task cluster:get-kubeconfig -- mono-node' "
    vars:
      cluster: '{{.cluster}}'
    cmds:
    - cd .. && task capi:cluster:kubectl cluster="{{.cluster}}" -- -n argocd-client get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d | task ks:ks -- add -k 0.keepassxc/keyfile --no-password -p -u admin --url https://argo.{{.cluster}}.weebo.poc 0.keepassxc/weebo-si {{.cluster}}-argo
  talosctl:
    vars:
      cluster: '{{.cluster}}'
    preconditions:
    - sh: '[ {{.cluster}} != "" ]'
      msg: "cluster is required ex task capi:cluster:kubectl cluster='mono-node' -- get pods"
    - sh: '[ -f talosconfig.{{.cluster}}.yml ]'
      msg: "talosconfig.{{.cluster}}.yml is required please run get-talosconfig ex: 'task cluster:get-talosconfig -- mono-node' "
    cmds:
    - talosctl --talosconfig talosconfig.{{.cluster}}.yml {{.CLI_ARGS}}
