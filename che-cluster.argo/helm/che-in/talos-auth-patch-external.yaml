apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: che-cluster
  namespace: eclipse-che
spec:
  refreshPolicy: Periodic
  refreshInterval: 24h
  secretStoreRef:
    name: che-cluster-store
  target:
    name: che-cluster
    template:
      type: Opaque
      data:
        che-cluster.yaml: |

                    - op: add
                      path: /machine/files
                      value:
                        - content: |
                            apiVersion: apiserver.config.k8s.io/v1beta1
                            kind: AuthenticationConfiguration
                            jwt:
                              - issuer:
                                  url: '{{ printf "{{"}} .url }}'
                                  audiences:
                                    - '{{ printf "{{"}} .client_id }}'
                                  audienceMatchPolicy: MatchAny
                                claimValidationRules:
                                  - expression: "claims.email_verified == true"
                                    message: "email must be verified"
                                claimMappings:
                                  username:
                                    expression: '"weebsso:" + claims.email'
                                  groups:
                                    expression: "claims.groups"
                                  uid:
                                    expression: "claims.sub"
                                userValidationRules:
                                  - expression: "!user.username.startsWith('system:')"
                                    message: "username cannot used reserved system: prefix"
                                  - expression: "user.groups.all(group, !group.startsWith('system:'))"
                                    message: "groups cannot used reserved system: prefix"
                          permissions: 0o444
                          path: /var/lib/apiserver/authentication.yaml
                          op: create

  data:
    - secretKey: url
      remoteRef:
        key: mc-authentik/che-cluster/{{ .Release.Namespace }}/auth
        property: AUTHENTIK_URL
    - secretKey: client_id
      remoteRef:
        key: mc-authentik/che-cluster/{{ .Release.Namespace }}/auth
        property: AUTHENTIK_CLIENT_ID
    - secretKey: client_secret
      remoteRef:
        key: mc-authentik/che-cluster/{{ .Release.Namespace }}/auth
        property: AUTHENTIK_CLIENT_SECRET
